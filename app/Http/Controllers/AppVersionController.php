<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;

class AppVersionController extends Controller
{
    public function checkQuasarAndroidVersion()
    {
        $files = glob(storage_path('app/public/*.apk'));
        if (empty($files)) {
            return response()->json(['error' => 'дистрибутив не найден'],404);
        }

        $latestApk = basename($files[0]);

        preg_match('/([\d.]+)(?:-[\w]+)?\.apk/', $latestApk, $matches);

        if (empty($matches[1])) {
            return response()->json(['error' => 'не удалось извлечь версию из файла'], 400);
        }

        return response()->json([
            'version' => $matches[1],
            'apk_name' => $latestApk
        ]);
    }

    public function downloadapk()
    {
        try {
            $files = glob(storage_path('app/public/*.apk'));
            if (empty($files)) {
                return response()->json(['error' => 'File not found'], 404);
            }

            usort($files, function($a, $b) {
                return filemtime($b) - filemtime($a);
            });

            $filePath = $files[0];
            $filename = basename($filePath);

            return response()->download($filePath, $filename, [
                'Content-Type' => 'application/vnd.android.package-archive',
                'Content-Disposition' => 'attachment; filename="'.$filename.'"'
            ]);
        } catch (\Exception $e) {
            \Log::error('Error downloading APK: '.$e->getMessage());
            return response()->json(['error' => 'Internal Server Error'], 500);
        }
    }


    public function getChcpManifest(Request $request)
    {
        // Пример данных манифеста
        $manifest = [
            'autogenerated' => true,
            'content_url' => 'https://dev.medovf2h.beget.tech/hcp',
            'release' => '0.0.3', // Версия вашего приложения
            'update' => 'start', // или 'resume', 'start'
        ];

        return response()->json($manifest);
    }


}
