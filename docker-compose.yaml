version: "3"

services:
  traefik:
    image: traefik:v3.3.3
    restart: always
    container_name: ledger_craft_traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--api.dashboard=true"               # Включаем сам дашборд
      - "--api.debug=true"                   # Включаем debug режим для отображения дополнительных логов в дашборде
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"

      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=medov-foto@mail.ru"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"  # Уровень логирования, может быть: DEBUG, INFO, WARN, ERROR
      - "--accesslog=true"   # Включение логов доступа
      - "--accesslog.filepath=/letsencrypt/access.log"  # Путь для логов доступа
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" #интерфейс traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./letsencrypt:/letsencrypt"

  nginx:
    image: nginx:latest
    volumes:
      - ./:/var/www/
      - ./_docker/nginx/conf.d/:/etc/nginx/conf.d/
    container_name: ledger_craft_nginx
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`prod.medovf2h.beget.tech`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"

        # Разрешаем HTTP без редиректа на HTTPS
     # - "traefik.http.routers.nginx-http.rule=Host(`dev.medovf2h.beget.tech`)"
     # - "traefik.http.routers.nginx-http.entrypoints=web"
     # - "traefik.http.routers.nginx-http.service=nginx"

  app:
    build:
      context: .
      dockerfile: _docker/app/Dockerfile
    volumes:
      - ./:/var/www/
    container_name: ledger_craft_app
    depends_on:
      - db
    environment:
      APP_URL: 'https://prod.medovf2h.beget.tech'
      APP_ENV: 'production'
      APP_KEY: 'base64:dwzzLawbopqcZ98G934Nt36KNwHN5t4s1mCCASGz3i8=' # Лучше генерировать его
      DB_CONNECTION: 'pgsql'
      DB_HOST: 'db'
      DB_PORT: '5432'
      DB_DATABASE: 'ledger_craft_db'
      DB_USERNAME: 'root'
      DB_PASSWORD: 'root'
      CACHE_DRIVER: 'file'
      SESSION_DRIVER: 'file'
      QUEUE_CONNECTION: 'sync'
    ports:
      - "5173:5173"

  db:
    image: postgres
    restart: always
    volumes:
      - ./tmp/db:/var/lib/postgres
    environment:
      POSTGRES_DB: ledger_craft_db
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - '5433:5432' # Проксируем порт 5432 из контейнера в локальную
    container_name: ledger_craft_db

